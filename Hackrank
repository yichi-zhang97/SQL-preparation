Hackrank Medium

##1. The PADS
select concat(Name,'(',left(Occupation,1),')')
from OCCUPATIONS
order by Name;
select concat('There are a total of ',count(Occupation),' ',lower(Occupation),'s.')
from OCCUPATIONS
group by Occupation
order by count(Occupation),Occupation;

##2. Occupations
with w1 as(
select Name, Occupation, rank()over(partition by Occupation order by Name) as rank
from OCCUPATIONS
where Occupation='Doctor'),
w2 as(
select Name, Occupation, rank()over(partition by Occupation order by Name) as rank
from OCCUPATIONS
where Occupation='Actor'),
w3 as(
select Name, Occupation, rank()over(partition by Occupation order by Name) as rank
from OCCUPATIONS
where Occupation='Professor'),
w4 as(
select Name, Occupation, rank()over(partition by Occupation order by Name) as rank
from OCCUPATIONS
where Occupation='Singer'),
w5 as(
select w3.Name as professor, w1.Name as doctor, w4.Name as singer, w2.Name as actor
from w3
left join w1 on w3.rank=w1.rank
left join w2 on w3.rank=w2.rank
left join w4 on w3.rank=w4.rank)
select doctor, professor, singer, actor
from w5


##3.Binary Tree nodes
select N, case 
when P is null then 'Root'
when N  in (select P from BST) then 'Inner'
else 'Leaf'
end as title
from BST
order by N

##4.New companies
with w1 as(
select company_code,
        count(distinct(lead_manager_code)) as lead_manager_code,
        count(distinct(senior_manager_code)) as senior_manager_code,
        count(distinct(manager_code)) as manager_code,
        count(distinct(employee_code)) as employee_code
from Employee
group by company_code)
select w1.company_code,founder, lead_manager_code,senior_manager_code,manager_code,employee_code
from w1
inner join Company
on Company.company_code=w1.company_code

##5.Interviews
with w1 as(
select Challenges.challenge_id,        
        sum(Submission_Stats.total_submissions) as total_submissions, 
        sum(Submission_Stats.total_accepted_submissions) as total_accepted_submissions
from Challenges 
inner join Submission_Stats
on Challenges.challenge_id=Submission_Stats.challenge_id
group by Challenges.challenge_id),
w2 as(
select Challenges.challenge_id,
        sum(View_Stats.total_views) as total_views,
        sum(View_Stats.total_unique_views) as total_unique_views
from Challenges
inner join View_Stats
on Challenges.challenge_id=View_Stats.challenge_id
group by Challenges.challenge_id),
w3 as(
select Contests.contest_id as contest_id,
        hacker_id, 
        name,
        sum(total_submissions) as total_submissions,
        sum(total_accepted_submissions) as total_accepted_submissions,
        sum(total_views) as total_views,
        sum(total_unique_views) as total_unique_views
from Contests
inner join Colleges
on Contests.contest_id=Colleges.contest_id
inner join Challenges
on Challenges.college_id=Colleges.college_id
left join w1
on Challenges.challenge_id=w1.challenge_id
left join w2
on Challenges.challenge_id=w2.challenge_id
group by Contests.contest_id,hacker_id, name)

select contest_id, hacker_id, name,total_submissions,total_accepted_submissions,total_views,total_unique_views
from w3
where contest_id not in (
select contest_id
from w3
where total_submissions=0 and total_accepted_submissions=0 and total_views=0and total_unique_views=0)
order by contest_id

##6.symmetric pairs
with w1 as(
select fun1.X as X,fun1.Y as Y,fun2.X as XX
from Functions fun1
inner join Functions fun2
on fun1.Y=fun2.X
where fun2.Y=fun1.X and fun1.X<=fun1.Y and fun1.X!=fun1.Y),
w2 as(
select X,Y
from (select X,Y,COUNT(*) as total_count from Functions where X=Y group by X,Y) sub
WHERE total_count>=2)

select X,Y
FROM W1
UNION
SELECT X,Y
FROM W2
order by X,Y

### 7. 15 days of learning SQL
with w1 as(
select hacker_id,Submission_date,
    datediff(day,lag(Submission_date,1)over(partition by hacker_id order by Submission_date),Submission_date) as difference
from Submissions
group by hacker_id,Submission_date),
w2 as(
select hacker_id,Submission_date, difference,     
        dense_rank()over(partition by hacker_id order by Submission_date) as rank,
    max(difference) over(partition by hacker_id order by Submission_date range between unbounded PRECEDING and current row) as max_diff
from w1
where hacker_id in (select hacker_id from Submissions where Submission_date='2016-03-01')),
w3 as(
select Submission_date, count(*) as total_number
from w2
where max_diff=1 or max_diff is null
group by Submission_date),
w4 as(
select Submission_date,hacker_id,count(*) as total
from Submissions
group by Submission_date,hacker_id),
w5 as(
select Submission_date,hacker_id,total,row_number()over(partition by Submission_date order by total desc, hacker_id) as rank_num
from w4),
w6 as(
select Submission_date, w5.hacker_id as hacker_id,name
from w5
inner join Hackers
on w5.hacker_id=Hackers.hacker_id
where rank_num=1)

select w3.Submission_date, total_number,hacker_id,name
from w3
inner join w6
on w6.Submission_date=w3.Submission_date
order by Submission_date


### 8. Placements
select Name
from Friends
inner join Students
on Friends.ID=Students.ID
inner join Packages P1
on P1.ID=Friends.ID 
inner join Packages P2
on P2.ID=Friends.Friend_ID
where P1.Salary<P2.Salary
order by P2.Salary


## 9. SQL Project planning
with w1 as(
select Start_Date, difference, row_number()over(order by Start_Date) as row1
from (
select Start_Date,datediff(day,lag(Start_Date)over(order by Start_Date),start_Date) as difference
from Projects) sub
where difference is Null or difference!=1),
w2 as
(select End_Date, difference, row_number()over(order by End_Date) as row2
from (
select End_Date,datediff(day,End_Date,lead(End_Date)over(order by End_Date)) as difference
from Projects) sub2
where difference is Null or difference!=1)
select Start_Date, End_Date
from (
select Start_Date,End_Date,datediff(day,Start_Date,End_Date) as new_diff
from w1
inner join w2
on w1.row1=w2.row2) sub
order by new_diff ,Start_Date


## 10.Contest Leaderboard
with w1 as(
select hacker_id,challenge_id,max(score) as score
from Submissions
group by challenge_id, hacker_id),
w2 as(
select Hackers.hacker_id,name,sum(score) as score
from Hackers
inner join w1
on w1.hacker_id=Hackers.hacker_id
group by Hackers.hacker_id,name)

select *
from w2
where score!=0
order by score desc, hacker_id
